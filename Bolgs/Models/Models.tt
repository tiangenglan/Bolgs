<#@ template  language="C#"    debug="true" hostspecific="True"#> 

<#@ assembly name="System.Data.dll" #>
<#@ assembly name="System.Data.DataSetExtensions.dll" #>
<#@ import namespace="System.IO"#>
<#@ import namespace="System"#>
<#@ import namespace="System.Collections"#>
<#@ import namespace="System.Collections.Generic"#>
<#@ import namespace="System.Configuration"#>   
<#@ import namespace="System.Data" #>
<#@ import namespace="System.Data.SqlClient" #>
<#@include file="$(ProjectDir)/Models/DbHelper.ttinclude"#> 
<#@include file="$(ProjectDir)/Models/MultipleOutputHelper.ttinclude"#> 
 <#  
    // 获取所有类映射
    List<String> Tables = new List<String>();
    //Tables.Add("Table1");
    //Tables.Add("Table2");   

    var dtnames= DbHelper.GetTables(config.ConnectionString, config.DbDatabase);
    foreach (DbTable a in dtnames)
    {
        Tables.Add(a.TableName);
    }

    var manager = Manager.Create(Host, GenerationEnvironment);  
    foreach (var entry in Tables)
    {
       var className = entry;
       // 定义输出文件
       manager.StartNewFile(className+".cs");
       #>
//------------------------------------------------------------------------------
//  <auto-generated>
//  此代码由模板自动生成
//  文件名称:<#=className#>.cs
//  生成时间: <#=DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss")#> by dlm
//  对此文件的更改可能会导致不正确的行为，并且如果
//  重新生成代码，这些更改将会丢失
//  </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Configuration;
using System.Linq; 
using System.Text;
namespace Gozyy.ToolClass.Models 
{
        [Gozyy.Repositories.TableName("<#=className#>")]
		<# foreach(DbColumn column1 in DbHelper.GetDbColumns(config.ConnectionString, config.DbDatabase, className)){#>
<# if(column1.IsPrimaryKey){#>[Gozyy.Repositories.PrimaryKey("<#=column1.ColumnName#>")]<#}#>
		<#}#>

        public partial class <#=className#>
        {
            <# foreach(DbColumn column in DbHelper.GetDbColumns(config.ConnectionString, config.DbDatabase, className)){#>

		    /// <summary>
		    /// <#=column.Remark#>
		    /// </summary>		
			<#if(column.CSharpType=="string"){#>
			public <#= column.CSharpType#><# if(column.CommonType.IsValueType && column.IsNullable){#>?<#}#> <#=column.ColumnName#> { get; set; }
			<#}#>
			<#if(column.CSharpType!="string"){#>
		    public <#= column.CSharpType#><# if(column.CommonType.IsValueType && column.IsNullable){#>?<#}#> <#=column.ColumnName#> { get; set; }
			<#}#>
		    <#}#> 
        } 
		public partial class <#=className#>Valid
		{
			public static string Check(<#=className#> m)
			{
				<# foreach(DbColumn column in DbHelper.GetDbColumns(config.ConnectionString, config.DbDatabase, className)){#>
				<#if(column.CSharpType=="string"){#>

				if(m.<#=column.ColumnName#>!=null && m.<#=column.ColumnName#>.Length><#=column.CharLength#>)
				{
					return "<#=column.Remark#><#=column.ColumnName#>过长(<#=column.CharLength#>)!";
				}
				<#}#>
				<#}#> 
				return "";
			}
		}
}
   <# 
       // 结束输出文件
       manager.EndBlock();
    } 
       // 执行编译
       manager.Process(true);  
    #>  
<#+
	public class config
	{
		public static readonly string ConnectionString= "server=.;database=Bolgs;User Id=sa;pwd=0306;Enlist=true;Pooling=true;Max Pool Size=300;Min Pool Size=0;Connection Lifetime=300;packet size=1000;";
		public static readonly string DbDatabase="Bolgs";
		//public static readonly string ConnectionString= "server=.;database=master;User Id=sa;pwd=111111;Enlist=true;Pooling=true;Max Pool Size=300;Min Pool Size=0;Connection Lifetime=300;packet size=1000;";
		//public static readonly string DbDatabase="carmaint";
	}
#>